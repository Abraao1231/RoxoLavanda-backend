generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                  @id @default(uuid())
  userName              String                  
  email                 String
  password              String
  created_at            DateTime
  genero                String  
  altura                Float
  peso                  Float
  RegistroTreinoRealiza RegistroTreinoRealiza[]
  Treinos Treino[] 

  @@unique([id])
  @@unique([email])
  @@map("user")
}


model Treino {
  id                    String                  @id @default(uuid())
  intervalo             Int
  nome                  String
  userId   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  RegistroTreinoRealiza RegistroTreinoRealiza[]
  TreinoPossuiExercicio TreinoPossuiExercicio[]
  @@map("treino")
}

model RegistroTreinoRealiza {
  id       String   @id @default(uuid())
  calorias Float
  tempo    Int
  data     DateTime
  userId   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  treinoId String
  treino   Treino   @relation(fields: [treinoId], references: [id], onDelete: Cascade)

  @@map("registra_treino_realiza")
}

model Exercicio {
  id                    String                  @id @default(uuid())
  nome                  String                 
  TreinoPossuiExercicio TreinoPossuiExercicio[]

  @@map("exercicio")
}

model TreinoPossuiExercicio {
  id       String   @id @default(uuid())
  numeroRep             Int
  intervalo             Int
  numeroSer             Int
  treinoId    String
  treino      Treino    @relation(fields: [treinoId], references: [id], onDelete: Cascade)
  exercicioId String
  exercicio   Exercicio @relation(fields: [exercicioId], references: [id], onDelete: Cascade)

  @@map("treino_possui_exercicio")
}
